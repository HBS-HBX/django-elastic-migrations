name: CI

on:
  push:
    branches:
      - master
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request
  pull_request:
    branches:
      - master
  # disabled because of https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
  #  pull_request_target:
  #    branches:
  #      - master
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true

      matrix:
        python-version: [
          #          "3.8",
          "3.9",
          #          "3.10",
          #          "3.11"
        ]
        django-version: [
          "3.2",
          #          "4.0",
          #          "4.1",
          #          "4.2",
        ]
        es-dsl-version: [
          "6.1",
          "6.2",
          #          "6.4",
          #          "7.4"
        ]
        es-version: [
          "6.8.2"
          #          "7.13.4"
        ]


    #        exclude:
    #          - python-version: "3.9"
    #            django-version: "1.11"

    steps:
      - name: Install and Run Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: ${{ matrix.es-version }}

      - uses: actions/checkout@v3

      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Pip Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/test.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install "Django==${{ matrix.django-version }}"
          python -m pip install "elasticsearch-dsl==${{ matrix.es-dsl-version }}"
          python -m pip install -r requirements/test.txt

      - name: Run tests with Python ${{ matrix.python-version }} and Django ${{ matrix.django-version }} and elasticsearch-dsl-py ${{ matrix.es-dsl-version }}
        run: |
          TOX_ENV=$(echo "py${{ matrix.python-version }}-django-${{ matrix.django-version }}-es${{ matrix.es-dsl-version }}" | tr -d .)
          echo -e "TOX_ENV: $TOX_ENV"
          python -m tox -e $TOX_ENV
#
#      - name: Publish Coverage Report
#        uses: codecov/codecov-action@v1
