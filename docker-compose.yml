# creates a dev elasticsearch (& Kibana, if you want)
# start:
#   docker-compose up
# stop:
#   docker-compose down
# delete:
#   docker-compose kill

version: '2.1'

services:
  elastic:
    # arm64v8 is for Apple M1
    image: webhippie/elasticsearch:6.4
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - "discovery.type=single-node"
      - "transport.host=127.0.0.1"
      - "xpack.security.enabled=false"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_count"]
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      # for normal elasticsearch:
      # - elasticsearch:/usr/share/elasticsearch/data
      # for webhippie/elasticsearch:
      - elasticsearch:/var/lib/elasticsearch

  # commented out because right now we're not using postgres for tests
# comment back in if we need it for multiprocessing tests
#  db:
#    image: postgres
#    restart: always
#    ports:
#    - "5432:5432"
#    environment:
#      POSTGRES_USER: "pguser"
#      POSTGRES_PASSWORD: "pgpass"
#      POSTGRES_DB: "pgdb"

# uncomment to get kibana, which can be useful for analyzing index contents
# this is currently not a required part of testing infrastructure, just left here for convenience
  kibana:
    image: docker.elastic.co/kibana/kibana:6.4.3
    depends_on:
      elastic:
        condition: service_healthy
    links:
      - elastic
    ports:
      - 5601:5601
    environment:
      - "ELASTICSEARCH_URL=http://elastic:9200"
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:5601"]
        interval: 10s
        timeout: 10s
        retries: 10
volumes:
    elasticsearch: